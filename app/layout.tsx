// app/layout.tsx

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { Avatar } from '@/components/catalyst/avatar';
import { Dropdown, DropdownButton, DropdownDivider, DropdownItem, DropdownLabel, DropdownMenu } from '@/components/catalyst/dropdown';
import { Navbar, NavbarDivider, NavbarItem, NavbarLabel, NavbarSection, NavbarSpacer } from '@/components/catalyst/navbar';
import { Sidebar, SidebarBody, SidebarHeader, SidebarItem, SidebarLabel, SidebarSection } from '@/components/catalyst/sidebar';
import { StackedLayout } from '@/components/catalyst/stacked-layout';
import { ArrowRightStartOnRectangleIcon, ChevronDownIcon, Cog8ToothIcon, LightBulbIcon, PlusIcon, ShieldCheckIcon, UserIcon } from '@heroicons/react/16/solid';
import { InboxIcon, MagnifyingGlassIcon } from '@heroicons/react/20/solid';

// Fonts setup
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata for the whole app
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Navigation items
const navItems = [
  { label: 'Home', url: '/' },
  { label: 'Events', url: '/events' },
  { label: 'Orders', url: '/orders' },
  { label: 'Broadcasts', url: '/broadcasts' },
  { label: 'Settings', url: '/settings' },
];

// Team dropdown menu
const TeamDropdownMenu = () => (
  <DropdownMenu className="min-w-80 lg:min-w-64" anchor="bottom start">
    <DropdownItem href="/teams/1/settings">
      <Cog8ToothIcon />
      <DropdownLabel>Settings</DropdownLabel>
    </DropdownItem>
    <DropdownDivider />
    <DropdownItem href="/teams/1">
      <Avatar slot="icon" src="/tailwind-logo.svg" />
      <DropdownLabel>Pathway</DropdownLabel>
    </DropdownItem>
    <DropdownItem href="/teams/2">
      <Avatar slot="icon" initials="WC" className="bg-purple-500 text-white" />
      <DropdownLabel>Workcation</DropdownLabel>
    </DropdownItem>
    <DropdownDivider />
    <DropdownItem href="/teams/create">
      <PlusIcon />
      <DropdownLabel>New team&hellip;</DropdownLabel>
    </DropdownItem>
  </DropdownMenu>
);

// Final layout
export default function RootLayout({
  children,
}: Readonly<{ children: React.ReactNode }>) {
  return (
    <html lang="en">
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <StackedLayout
          navbar={
            <Navbar>
              <Dropdown>
                <DropdownButton as={NavbarItem} className="max-lg:hidden">
                  <Avatar src="https://cdn-icons-png.flaticon.com/512/1828/1828884.png" />
                  <NavbarLabel>Tailwind Labs</NavbarLabel>
                  <ChevronDownIcon />
                </DropdownButton>
                <TeamDropdownMenu />
              </Dropdown>
              <NavbarDivider className="max-lg:hidden" />
              <NavbarSection className="max-lg:hidden">
                {navItems.map(({ label, url }) => (
                  <NavbarItem key={label} href={url}>
                    {label}
                  </NavbarItem>
                ))}
              </NavbarSection>
              <NavbarSpacer />
              <NavbarSection>
                <NavbarItem href="/search" aria-label="Search">
                  <MagnifyingGlassIcon />
                </NavbarItem>
                <NavbarItem href="/inbox" aria-label="Inbox">
                  <InboxIcon />
                </NavbarItem>
                <Dropdown>
                  <DropdownButton as={NavbarItem}>
                    <Avatar src="https://www.w3schools.com/howto/img_avatar.png" square />
                  </DropdownButton>
                  <DropdownMenu className="min-w-64" anchor="bottom end">
                    <DropdownItem href="/my-profile">
                      <UserIcon />
                      <DropdownLabel>My profile</DropdownLabel>
                    </DropdownItem>
                    <DropdownItem href="/settings">
                      <Cog8ToothIcon />
                      <DropdownLabel>Settings</DropdownLabel>
                    </DropdownItem>
                    <DropdownDivider />
                    <DropdownItem href="/privacy-policy">
                      <ShieldCheckIcon />
                      <DropdownLabel>Privacy policy</DropdownLabel>
                    </DropdownItem>
                    <DropdownItem href="/share-feedback">
                      <LightBulbIcon />
                      <DropdownLabel>Share feedback</DropdownLabel>
                    </DropdownItem>
                    <DropdownDivider />
                    <DropdownItem href="/logout">
                      <ArrowRightStartOnRectangleIcon />
                      <DropdownLabel>Sign out</DropdownLabel>
                    </DropdownItem>
                  </DropdownMenu>
                </Dropdown>
              </NavbarSection>
            </Navbar>
          }
          sidebar={
            <Sidebar>
              <SidebarHeader>
                <Dropdown>
                  <DropdownButton as={SidebarItem} className="lg:mb-2.5">
                    <Avatar src="https://www.w3schools.com/howto/img_avatar.png" />
                    <SidebarLabel>Tailwind Labs</SidebarLabel>
                    <ChevronDownIcon />
                  </DropdownButton>
                  <TeamDropdownMenu />
                </Dropdown>
              </SidebarHeader>
              <SidebarBody>
                <SidebarSection>
                  {navItems.map(({ label, url }) => (
                    <SidebarItem key={label} href={url}>
                      {label}
                    </SidebarItem>
                  ))}
                </SidebarSection>
              </SidebarBody>
            </Sidebar>
          }
        >
          {children}
        </StackedLayout>
      </body>
    </html>
  );
}
